// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.0
// 	protoc        v5.26.1
// source: coinmeca_grpc.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VaultTradeType int32

const (
	VaultTradeType_DEPOSIT  VaultTradeType = 0
	VaultTradeType_WITHDRAW VaultTradeType = 1
)

// Enum value maps for VaultTradeType.
var (
	VaultTradeType_name = map[int32]string{
		0: "DEPOSIT",
		1: "WITHDRAW",
	}
	VaultTradeType_value = map[string]int32{
		"DEPOSIT":  0,
		"WITHDRAW": 1,
	}
)

func (x VaultTradeType) Enum() *VaultTradeType {
	p := new(VaultTradeType)
	*p = x
	return p
}

func (x VaultTradeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VaultTradeType) Descriptor() protoreflect.EnumDescriptor {
	return file_coinmeca_grpc_proto_enumTypes[0].Descriptor()
}

func (VaultTradeType) Type() protoreflect.EnumType {
	return &file_coinmeca_grpc_proto_enumTypes[0]
}

func (x VaultTradeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VaultTradeType.Descriptor instead.
func (VaultTradeType) EnumDescriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{0}
}

// ====================================
// Market
// ====================================
type MarketTradeType int32

const (
	MarketTradeType_Buy  MarketTradeType = 0
	MarketTradeType_Sell MarketTradeType = 1
	MarketTradeType_Bid  MarketTradeType = 2
	MarketTradeType_Ask  MarketTradeType = 3
)

// Enum value maps for MarketTradeType.
var (
	MarketTradeType_name = map[int32]string{
		0: "Buy",
		1: "Sell",
		2: "Bid",
		3: "Ask",
	}
	MarketTradeType_value = map[string]int32{
		"Buy":  0,
		"Sell": 1,
		"Bid":  2,
		"Ask":  3,
	}
)

func (x MarketTradeType) Enum() *MarketTradeType {
	p := new(MarketTradeType)
	*p = x
	return p
}

func (x MarketTradeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MarketTradeType) Descriptor() protoreflect.EnumDescriptor {
	return file_coinmeca_grpc_proto_enumTypes[1].Descriptor()
}

func (MarketTradeType) Type() protoreflect.EnumType {
	return &file_coinmeca_grpc_proto_enumTypes[1]
}

func (x MarketTradeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MarketTradeType.Descriptor instead.
func (MarketTradeType) EnumDescriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{1}
}

type FarmTradeType int32

const (
	FarmTradeType_STAKING FarmTradeType = 0
	FarmTradeType_UNSTAKE FarmTradeType = 1
)

// Enum value maps for FarmTradeType.
var (
	FarmTradeType_name = map[int32]string{
		0: "STAKING",
		1: "UNSTAKE",
	}
	FarmTradeType_value = map[string]int32{
		"STAKING": 0,
		"UNSTAKE": 1,
	}
)

func (x FarmTradeType) Enum() *FarmTradeType {
	p := new(FarmTradeType)
	*p = x
	return p
}

func (x FarmTradeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FarmTradeType) Descriptor() protoreflect.EnumDescriptor {
	return file_coinmeca_grpc_proto_enumTypes[2].Descriptor()
}

func (FarmTradeType) Type() protoreflect.EnumType {
	return &file_coinmeca_grpc_proto_enumTypes[2]
}

func (x FarmTradeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FarmTradeType.Descriptor instead.
func (FarmTradeType) EnumDescriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{2}
}

type GeneralRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Request:
	//
	//	*GeneralRequest_Transaction
	//	*GeneralRequest_VaultRecent
	//	*GeneralRequest_VaultInfo
	//	*GeneralRequest_ExchangeRate
	//	*GeneralRequest_MarketRecent
	//	*GeneralRequest_MarketOrderbook
	//	*GeneralRequest_VaultValueLocked
	//	*GeneralRequest_MarketInfo
	//	*GeneralRequest_FarmInfo
	//	*GeneralRequest_FarmRecent
	//	*GeneralRequest_VaultLast
	//	*GeneralRequest_Vault24HInfos
	//	*GeneralRequest_MarketOrderbookRecent
	//	*GeneralRequest_MarketLast
	Request isGeneralRequest_Request `protobuf_oneof:"request"`
}

func (x *GeneralRequest) Reset() {
	*x = GeneralRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coinmeca_grpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneralRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneralRequest) ProtoMessage() {}

func (x *GeneralRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coinmeca_grpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneralRequest.ProtoReflect.Descriptor instead.
func (*GeneralRequest) Descriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{0}
}

func (m *GeneralRequest) GetRequest() isGeneralRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *GeneralRequest) GetTransaction() *TransactionRequest {
	if x, ok := x.GetRequest().(*GeneralRequest_Transaction); ok {
		return x.Transaction
	}
	return nil
}

func (x *GeneralRequest) GetVaultRecent() *VaultRecentRequest {
	if x, ok := x.GetRequest().(*GeneralRequest_VaultRecent); ok {
		return x.VaultRecent
	}
	return nil
}

func (x *GeneralRequest) GetVaultInfo() *VaultInfoRequest {
	if x, ok := x.GetRequest().(*GeneralRequest_VaultInfo); ok {
		return x.VaultInfo
	}
	return nil
}

func (x *GeneralRequest) GetExchangeRate() *ExchangeRateRequest {
	if x, ok := x.GetRequest().(*GeneralRequest_ExchangeRate); ok {
		return x.ExchangeRate
	}
	return nil
}

func (x *GeneralRequest) GetMarketRecent() *MarketRecentRequest {
	if x, ok := x.GetRequest().(*GeneralRequest_MarketRecent); ok {
		return x.MarketRecent
	}
	return nil
}

func (x *GeneralRequest) GetMarketOrderbook() *MarketOrderbookRequest {
	if x, ok := x.GetRequest().(*GeneralRequest_MarketOrderbook); ok {
		return x.MarketOrderbook
	}
	return nil
}

func (x *GeneralRequest) GetVaultValueLocked() *VaultValueLockedRequest {
	if x, ok := x.GetRequest().(*GeneralRequest_VaultValueLocked); ok {
		return x.VaultValueLocked
	}
	return nil
}

func (x *GeneralRequest) GetMarketInfo() *MarketInfoRequest {
	if x, ok := x.GetRequest().(*GeneralRequest_MarketInfo); ok {
		return x.MarketInfo
	}
	return nil
}

func (x *GeneralRequest) GetFarmInfo() *FarmInfoRequest {
	if x, ok := x.GetRequest().(*GeneralRequest_FarmInfo); ok {
		return x.FarmInfo
	}
	return nil
}

func (x *GeneralRequest) GetFarmRecent() *FarmRecentRequest {
	if x, ok := x.GetRequest().(*GeneralRequest_FarmRecent); ok {
		return x.FarmRecent
	}
	return nil
}

func (x *GeneralRequest) GetVaultLast() *VaultLastRequest {
	if x, ok := x.GetRequest().(*GeneralRequest_VaultLast); ok {
		return x.VaultLast
	}
	return nil
}

func (x *GeneralRequest) GetVault24HInfos() *Vault24HInfosRequest {
	if x, ok := x.GetRequest().(*GeneralRequest_Vault24HInfos); ok {
		return x.Vault24HInfos
	}
	return nil
}

func (x *GeneralRequest) GetMarketOrderbookRecent() *MarketOrderbookRecentRequest {
	if x, ok := x.GetRequest().(*GeneralRequest_MarketOrderbookRecent); ok {
		return x.MarketOrderbookRecent
	}
	return nil
}

func (x *GeneralRequest) GetMarketLast() *MarketLastRequest {
	if x, ok := x.GetRequest().(*GeneralRequest_MarketLast); ok {
		return x.MarketLast
	}
	return nil
}

type isGeneralRequest_Request interface {
	isGeneralRequest_Request()
}

type GeneralRequest_Transaction struct {
	Transaction *TransactionRequest `protobuf:"bytes,1,opt,name=transaction,proto3,oneof"`
}

type GeneralRequest_VaultRecent struct {
	VaultRecent *VaultRecentRequest `protobuf:"bytes,2,opt,name=vaultRecent,proto3,oneof"`
}

type GeneralRequest_VaultInfo struct {
	VaultInfo *VaultInfoRequest `protobuf:"bytes,3,opt,name=vaultInfo,proto3,oneof"`
}

type GeneralRequest_ExchangeRate struct {
	ExchangeRate *ExchangeRateRequest `protobuf:"bytes,4,opt,name=exchangeRate,proto3,oneof"`
}

type GeneralRequest_MarketRecent struct {
	MarketRecent *MarketRecentRequest `protobuf:"bytes,5,opt,name=marketRecent,proto3,oneof"`
}

type GeneralRequest_MarketOrderbook struct {
	MarketOrderbook *MarketOrderbookRequest `protobuf:"bytes,6,opt,name=marketOrderbook,proto3,oneof"`
}

type GeneralRequest_VaultValueLocked struct {
	VaultValueLocked *VaultValueLockedRequest `protobuf:"bytes,7,opt,name=vaultValueLocked,proto3,oneof"`
}

type GeneralRequest_MarketInfo struct {
	MarketInfo *MarketInfoRequest `protobuf:"bytes,8,opt,name=marketInfo,proto3,oneof"`
}

type GeneralRequest_FarmInfo struct {
	FarmInfo *FarmInfoRequest `protobuf:"bytes,9,opt,name=farmInfo,proto3,oneof"`
}

type GeneralRequest_FarmRecent struct {
	FarmRecent *FarmRecentRequest `protobuf:"bytes,10,opt,name=farmRecent,proto3,oneof"`
}

type GeneralRequest_VaultLast struct {
	VaultLast *VaultLastRequest `protobuf:"bytes,11,opt,name=vaultLast,proto3,oneof"`
}

type GeneralRequest_Vault24HInfos struct {
	Vault24HInfos *Vault24HInfosRequest `protobuf:"bytes,12,opt,name=vault24hInfos,proto3,oneof"`
}

type GeneralRequest_MarketOrderbookRecent struct {
	MarketOrderbookRecent *MarketOrderbookRecentRequest `protobuf:"bytes,13,opt,name=marketOrderbookRecent,proto3,oneof"`
}

type GeneralRequest_MarketLast struct {
	MarketLast *MarketLastRequest `protobuf:"bytes,14,opt,name=MarketLast,proto3,oneof"`
}

func (*GeneralRequest_Transaction) isGeneralRequest_Request() {}

func (*GeneralRequest_VaultRecent) isGeneralRequest_Request() {}

func (*GeneralRequest_VaultInfo) isGeneralRequest_Request() {}

func (*GeneralRequest_ExchangeRate) isGeneralRequest_Request() {}

func (*GeneralRequest_MarketRecent) isGeneralRequest_Request() {}

func (*GeneralRequest_MarketOrderbook) isGeneralRequest_Request() {}

func (*GeneralRequest_VaultValueLocked) isGeneralRequest_Request() {}

func (*GeneralRequest_MarketInfo) isGeneralRequest_Request() {}

func (*GeneralRequest_FarmInfo) isGeneralRequest_Request() {}

func (*GeneralRequest_FarmRecent) isGeneralRequest_Request() {}

func (*GeneralRequest_VaultLast) isGeneralRequest_Request() {}

func (*GeneralRequest_Vault24HInfos) isGeneralRequest_Request() {}

func (*GeneralRequest_MarketOrderbookRecent) isGeneralRequest_Request() {}

func (*GeneralRequest_MarketLast) isGeneralRequest_Request() {}

type GeneralResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *GeneralResponse) Reset() {
	*x = GeneralResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coinmeca_grpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneralResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneralResponse) ProtoMessage() {}

func (x *GeneralResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coinmeca_grpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneralResponse.ProtoReflect.Descriptor instead.
func (*GeneralResponse) Descriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{1}
}

func (x *GeneralResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// ====================================
// AddTransaction
// ====================================
type TransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Transaction `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TransactionRequest) Reset() {
	*x = TransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coinmeca_grpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionRequest) ProtoMessage() {}

func (x *TransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coinmeca_grpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionRequest.ProtoReflect.Descriptor instead.
func (*TransactionRequest) Descriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{2}
}

func (x *TransactionRequest) GetData() *Transaction {
	if x != nil {
		return x.Data
	}
	return nil
}

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	BlockHash   string   `protobuf:"bytes,2,opt,name=BlockHash,proto3" json:"BlockHash,omitempty"`
	BlockNumber string   `protobuf:"bytes,3,opt,name=BlockNumber,proto3" json:"BlockNumber,omitempty"`
	Hash        string   `protobuf:"bytes,4,opt,name=Hash,proto3" json:"Hash,omitempty"`
	AccessList  []string `protobuf:"bytes,5,rep,name=AccessList,proto3" json:"AccessList,omitempty"`
	ChainId     string   `protobuf:"bytes,6,opt,name=ChainId,proto3" json:"ChainId,omitempty"`
	From        string   `protobuf:"bytes,7,opt,name=From,proto3" json:"From,omitempty"`
	To          string   `protobuf:"bytes,8,opt,name=To,proto3" json:"To,omitempty"`
	Gas         string   `protobuf:"bytes,9,opt,name=Gas,proto3" json:"Gas,omitempty"`
	GasPrice    string   `protobuf:"bytes,10,opt,name=GasPrice,proto3" json:"GasPrice,omitempty"`
	Input       string   `protobuf:"bytes,11,opt,name=Input,proto3" json:"Input,omitempty"`
	Cate        string   `protobuf:"bytes,12,opt,name=Cate,proto3" json:"Cate,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coinmeca_grpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_coinmeca_grpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{3}
}

func (x *Transaction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Transaction) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *Transaction) GetBlockNumber() string {
	if x != nil {
		return x.BlockNumber
	}
	return ""
}

func (x *Transaction) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *Transaction) GetAccessList() []string {
	if x != nil {
		return x.AccessList
	}
	return nil
}

func (x *Transaction) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *Transaction) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Transaction) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Transaction) GetGas() string {
	if x != nil {
		return x.Gas
	}
	return ""
}

func (x *Transaction) GetGasPrice() string {
	if x != nil {
		return x.GasPrice
	}
	return ""
}

func (x *Transaction) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *Transaction) GetCate() string {
	if x != nil {
		return x.Cate
	}
	return ""
}

type TransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *TransactionResponse) Reset() {
	*x = TransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coinmeca_grpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionResponse) ProtoMessage() {}

func (x *TransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coinmeca_grpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionResponse.ProtoReflect.Descriptor instead.
func (*TransactionResponse) Descriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{4}
}

func (x *TransactionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// ====================================
// Vault
// ====================================
type VaultRecentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *VaultRecent `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *VaultRecentRequest) Reset() {
	*x = VaultRecentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coinmeca_grpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VaultRecentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VaultRecentRequest) ProtoMessage() {}

func (x *VaultRecentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coinmeca_grpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VaultRecentRequest.ProtoReflect.Descriptor instead.
func (*VaultRecentRequest) Descriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{5}
}

func (x *VaultRecentRequest) GetData() *VaultRecent {
	if x != nil {
		return x.Data
	}
	return nil
}

type VaultRecent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId  int64          `protobuf:"varint,1,opt,name=chainId,proto3" json:"chainId,omitempty"`
	Token    string         `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	User     string         `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Type     VaultTradeType `protobuf:"varint,4,opt,name=type,proto3,enum=grpcmodule.VaultTradeType" json:"type,omitempty"`
	Time     string         `protobuf:"bytes,5,opt,name=time,proto3" json:"time,omitempty"`
	Amount   float64        `protobuf:"fixed64,6,opt,name=amount,proto3" json:"amount,omitempty"`
	Meca     float64        `protobuf:"fixed64,7,opt,name=meca,proto3" json:"meca,omitempty"`
	Share    float64        `protobuf:"fixed64,8,opt,name=share,proto3" json:"share,omitempty"`
	TxHash   string         `protobuf:"bytes,9,opt,name=txHash,proto3" json:"txHash,omitempty"`
	UpdateAt string         `protobuf:"bytes,10,opt,name=updateAt,proto3" json:"updateAt,omitempty"`
}

func (x *VaultRecent) Reset() {
	*x = VaultRecent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coinmeca_grpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VaultRecent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VaultRecent) ProtoMessage() {}

func (x *VaultRecent) ProtoReflect() protoreflect.Message {
	mi := &file_coinmeca_grpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VaultRecent.ProtoReflect.Descriptor instead.
func (*VaultRecent) Descriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{6}
}

func (x *VaultRecent) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *VaultRecent) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *VaultRecent) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *VaultRecent) GetType() VaultTradeType {
	if x != nil {
		return x.Type
	}
	return VaultTradeType_DEPOSIT
}

func (x *VaultRecent) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *VaultRecent) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *VaultRecent) GetMeca() float64 {
	if x != nil {
		return x.Meca
	}
	return 0
}

func (x *VaultRecent) GetShare() float64 {
	if x != nil {
		return x.Share
	}
	return 0
}

func (x *VaultRecent) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *VaultRecent) GetUpdateAt() string {
	if x != nil {
		return x.UpdateAt
	}
	return ""
}

type VaultRecentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *VaultRecentResponse) Reset() {
	*x = VaultRecentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coinmeca_grpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VaultRecentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VaultRecentResponse) ProtoMessage() {}

func (x *VaultRecentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coinmeca_grpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VaultRecentResponse.ProtoReflect.Descriptor instead.
func (*VaultRecentResponse) Descriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{7}
}

func (x *VaultRecentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type VaultInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *VaultInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *VaultInfoRequest) Reset() {
	*x = VaultInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coinmeca_grpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VaultInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VaultInfoRequest) ProtoMessage() {}

func (x *VaultInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coinmeca_grpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VaultInfoRequest.ProtoReflect.Descriptor instead.
func (*VaultInfoRequest) Descriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{8}
}

func (x *VaultInfoRequest) GetData() *VaultInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type VaultInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId  int64  `protobuf:"varint,1,opt,name=chainId,proto3" json:"chainId,omitempty"`
	Address  string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Decimals int64  `protobuf:"varint,3,opt,name=decimals,proto3" json:"decimals,omitempty"`
	Exchange string `protobuf:"bytes,4,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Key      bool   `protobuf:"varint,5,opt,name=key,proto3" json:"key,omitempty"`
	Locked   string `protobuf:"bytes,6,opt,name=locked,proto3" json:"locked,omitempty"`
	Name     string `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	Need     string `protobuf:"bytes,8,opt,name=need,proto3" json:"need,omitempty"`
	Rate     string `protobuf:"bytes,9,opt,name=rate,proto3" json:"rate,omitempty"`
	Symbol   string `protobuf:"bytes,10,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Weight   string `protobuf:"bytes,11,opt,name=weight,proto3" json:"weight,omitempty"`
	Value    string `protobuf:"bytes,12,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *VaultInfo) Reset() {
	*x = VaultInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coinmeca_grpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VaultInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VaultInfo) ProtoMessage() {}

func (x *VaultInfo) ProtoReflect() protoreflect.Message {
	mi := &file_coinmeca_grpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VaultInfo.ProtoReflect.Descriptor instead.
func (*VaultInfo) Descriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{9}
}

func (x *VaultInfo) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *VaultInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *VaultInfo) GetDecimals() int64 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *VaultInfo) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *VaultInfo) GetKey() bool {
	if x != nil {
		return x.Key
	}
	return false
}

func (x *VaultInfo) GetLocked() string {
	if x != nil {
		return x.Locked
	}
	return ""
}

func (x *VaultInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VaultInfo) GetNeed() string {
	if x != nil {
		return x.Need
	}
	return ""
}

func (x *VaultInfo) GetRate() string {
	if x != nil {
		return x.Rate
	}
	return ""
}

func (x *VaultInfo) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *VaultInfo) GetWeight() string {
	if x != nil {
		return x.Weight
	}
	return ""
}

func (x *VaultInfo) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ExchangeRateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *ExchangeRate `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ExchangeRateRequest) Reset() {
	*x = ExchangeRateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coinmeca_grpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeRateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeRateRequest) ProtoMessage() {}

func (x *ExchangeRateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coinmeca_grpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeRateRequest.ProtoReflect.Descriptor instead.
func (*ExchangeRateRequest) Descriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{10}
}

func (x *ExchangeRateRequest) GetData() *ExchangeRate {
	if x != nil {
		return x.Data
	}
	return nil
}

type ExchangeRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId    int64                 `protobuf:"varint,1,opt,name=chainId,proto3" json:"chainId,omitempty"`
	UserPrices []*AddressUsdPriceSet `protobuf:"bytes,2,rep,name=userPrices,proto3" json:"userPrices,omitempty"`
}

func (x *ExchangeRate) Reset() {
	*x = ExchangeRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coinmeca_grpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeRate) ProtoMessage() {}

func (x *ExchangeRate) ProtoReflect() protoreflect.Message {
	mi := &file_coinmeca_grpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeRate.ProtoReflect.Descriptor instead.
func (*ExchangeRate) Descriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{11}
}

func (x *ExchangeRate) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *ExchangeRate) GetUserPrices() []*AddressUsdPriceSet {
	if x != nil {
		return x.UserPrices
	}
	return nil
}

type AddressUsdPriceSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address   string  `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	UserPrice float64 `protobuf:"fixed64,2,opt,name=userPrice,proto3" json:"userPrice,omitempty"`
}

func (x *AddressUsdPriceSet) Reset() {
	*x = AddressUsdPriceSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coinmeca_grpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressUsdPriceSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressUsdPriceSet) ProtoMessage() {}

func (x *AddressUsdPriceSet) ProtoReflect() protoreflect.Message {
	mi := &file_coinmeca_grpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressUsdPriceSet.ProtoReflect.Descriptor instead.
func (*AddressUsdPriceSet) Descriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{12}
}

func (x *AddressUsdPriceSet) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AddressUsdPriceSet) GetUserPrice() float64 {
	if x != nil {
		return x.UserPrice
	}
	return 0
}

// Vault ValueLocked
type VaultValueLockedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *VaultValueLocked `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *VaultValueLockedRequest) Reset() {
	*x = VaultValueLockedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coinmeca_grpc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VaultValueLockedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VaultValueLockedRequest) ProtoMessage() {}

func (x *VaultValueLockedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coinmeca_grpc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VaultValueLockedRequest.ProtoReflect.Descriptor instead.
func (*VaultValueLockedRequest) Descriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{13}
}

func (x *VaultValueLockedRequest) GetData() *VaultValueLocked {
	if x != nil {
		return x.Data
	}
	return nil
}

type VaultValueLocked struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Symbol      string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Address     string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Time        int64  `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"`
	Weight      string `protobuf:"bytes,5,opt,name=weight,proto3" json:"weight,omitempty"`
	Locked      string `protobuf:"bytes,6,opt,name=locked,proto3" json:"locked,omitempty"`
	Value       string `protobuf:"bytes,7,opt,name=value,proto3" json:"value,omitempty"`
	ValueLocked string `protobuf:"bytes,8,opt,name=valueLocked,proto3" json:"valueLocked,omitempty"`
}

func (x *VaultValueLocked) Reset() {
	*x = VaultValueLocked{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coinmeca_grpc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VaultValueLocked) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VaultValueLocked) ProtoMessage() {}

func (x *VaultValueLocked) ProtoReflect() protoreflect.Message {
	mi := &file_coinmeca_grpc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VaultValueLocked.ProtoReflect.Descriptor instead.
func (*VaultValueLocked) Descriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{14}
}

func (x *VaultValueLocked) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VaultValueLocked) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *VaultValueLocked) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *VaultValueLocked) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *VaultValueLocked) GetWeight() string {
	if x != nil {
		return x.Weight
	}
	return ""
}

func (x *VaultValueLocked) GetLocked() string {
	if x != nil {
		return x.Locked
	}
	return ""
}

func (x *VaultValueLocked) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *VaultValueLocked) GetValueLocked() string {
	if x != nil {
		return x.ValueLocked
	}
	return ""
}

type VaultLastRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *VaultLast `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *VaultLastRequest) Reset() {
	*x = VaultLastRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coinmeca_grpc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VaultLastRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VaultLastRequest) ProtoMessage() {}

func (x *VaultLastRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coinmeca_grpc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VaultLastRequest.ProtoReflect.Descriptor instead.
func (*VaultLastRequest) Descriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{15}
}

func (x *VaultLastRequest) GetData() *VaultLast {
	if x != nil {
		return x.Data
	}
	return nil
}

type VaultLast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address  string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	ChainId  int32  `protobuf:"varint,2,opt,name=chainId,proto3" json:"chainId,omitempty"`
	Tl       string `protobuf:"bytes,3,opt,name=tl,proto3" json:"tl,omitempty"`
	Tvl      string `protobuf:"bytes,4,opt,name=tvl,proto3" json:"tvl,omitempty"`
	Deposit  string `protobuf:"bytes,5,opt,name=deposit,proto3" json:"deposit,omitempty"`
	Withdraw string `protobuf:"bytes,6,opt,name=withdraw,proto3" json:"withdraw,omitempty"`
	Exchange string `protobuf:"bytes,7,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Weight   string `protobuf:"bytes,8,opt,name=weight,proto3" json:"weight,omitempty"`
}

func (x *VaultLast) Reset() {
	*x = VaultLast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coinmeca_grpc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VaultLast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VaultLast) ProtoMessage() {}

func (x *VaultLast) ProtoReflect() protoreflect.Message {
	mi := &file_coinmeca_grpc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VaultLast.ProtoReflect.Descriptor instead.
func (*VaultLast) Descriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{16}
}

func (x *VaultLast) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *VaultLast) GetChainId() int32 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *VaultLast) GetTl() string {
	if x != nil {
		return x.Tl
	}
	return ""
}

func (x *VaultLast) GetTvl() string {
	if x != nil {
		return x.Tvl
	}
	return ""
}

func (x *VaultLast) GetDeposit() string {
	if x != nil {
		return x.Deposit
	}
	return ""
}

func (x *VaultLast) GetWithdraw() string {
	if x != nil {
		return x.Withdraw
	}
	return ""
}

func (x *VaultLast) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *VaultLast) GetWeight() string {
	if x != nil {
		return x.Weight
	}
	return ""
}

type Vault24HInfosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Vault24HInfos `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Vault24HInfosRequest) Reset() {
	*x = Vault24HInfosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coinmeca_grpc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vault24HInfosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vault24HInfosRequest) ProtoMessage() {}

func (x *Vault24HInfosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coinmeca_grpc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vault24HInfosRequest.ProtoReflect.Descriptor instead.
func (*Vault24HInfosRequest) Descriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{17}
}

func (x *Vault24HInfosRequest) GetData() *Vault24HInfos {
	if x != nil {
		return x.Data
	}
	return nil
}

type Vault24HInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address     string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	ChainId     int32  `protobuf:"varint,2,opt,name=chainId,proto3" json:"chainId,omitempty"`
	TDeposit    string `protobuf:"bytes,3,opt,name=tDeposit,proto3" json:"tDeposit,omitempty"`
	TWithdraw   string `protobuf:"bytes,4,opt,name=tWithdraw,proto3" json:"tWithdraw,omitempty"`
	Deposit24H  string `protobuf:"bytes,5,opt,name=deposit24h,proto3" json:"deposit24h,omitempty"`
	Withdraw24H string `protobuf:"bytes,6,opt,name=withdraw24h,proto3" json:"withdraw24h,omitempty"`
	MintMeca24H string `protobuf:"bytes,7,opt,name=mintMeca24h,proto3" json:"mintMeca24h,omitempty"`
	BurnMeca24H string `protobuf:"bytes,8,opt,name=burnMeca24h,proto3" json:"burnMeca24h,omitempty"`
}

func (x *Vault24HInfos) Reset() {
	*x = Vault24HInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coinmeca_grpc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vault24HInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vault24HInfos) ProtoMessage() {}

func (x *Vault24HInfos) ProtoReflect() protoreflect.Message {
	mi := &file_coinmeca_grpc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vault24HInfos.ProtoReflect.Descriptor instead.
func (*Vault24HInfos) Descriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{18}
}

func (x *Vault24HInfos) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Vault24HInfos) GetChainId() int32 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *Vault24HInfos) GetTDeposit() string {
	if x != nil {
		return x.TDeposit
	}
	return ""
}

func (x *Vault24HInfos) GetTWithdraw() string {
	if x != nil {
		return x.TWithdraw
	}
	return ""
}

func (x *Vault24HInfos) GetDeposit24H() string {
	if x != nil {
		return x.Deposit24H
	}
	return ""
}

func (x *Vault24HInfos) GetWithdraw24H() string {
	if x != nil {
		return x.Withdraw24H
	}
	return ""
}

func (x *Vault24HInfos) GetMintMeca24H() string {
	if x != nil {
		return x.MintMeca24H
	}
	return ""
}

func (x *Vault24HInfos) GetBurnMeca24H() string {
	if x != nil {
		return x.BurnMeca24H
	}
	return ""
}

type Tick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price   string `protobuf:"bytes,1,opt,name=price,proto3" json:"price,omitempty"`
	Balance string `protobuf:"bytes,2,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *Tick) Reset() {
	*x = Tick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coinmeca_grpc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tick) ProtoMessage() {}

func (x *Tick) ProtoReflect() protoreflect.Message {
	mi := &file_coinmeca_grpc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tick.ProtoReflect.Descriptor instead.
func (*Tick) Descriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{19}
}

func (x *Tick) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *Tick) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

type MarketInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *MarketInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *MarketInfoRequest) Reset() {
	*x = MarketInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coinmeca_grpc_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketInfoRequest) ProtoMessage() {}

func (x *MarketInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coinmeca_grpc_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketInfoRequest.ProtoReflect.Descriptor instead.
func (*MarketInfoRequest) Descriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{20}
}

func (x *MarketInfoRequest) GetData() *MarketInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type MarketOrderbook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asks []*Tick `protobuf:"bytes,1,rep,name=asks,proto3" json:"asks,omitempty"`
	Bids []*Tick `protobuf:"bytes,2,rep,name=bids,proto3" json:"bids,omitempty"`
}

func (x *MarketOrderbook) Reset() {
	*x = MarketOrderbook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coinmeca_grpc_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketOrderbook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketOrderbook) ProtoMessage() {}

func (x *MarketOrderbook) ProtoReflect() protoreflect.Message {
	mi := &file_coinmeca_grpc_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketOrderbook.ProtoReflect.Descriptor instead.
func (*MarketOrderbook) Descriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{21}
}

func (x *MarketOrderbook) GetAsks() []*Tick {
	if x != nil {
		return x.Asks
	}
	return nil
}

func (x *MarketOrderbook) GetBids() []*Tick {
	if x != nil {
		return x.Bids
	}
	return nil
}

type MarketOrderbookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *MarketOrderbook `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *MarketOrderbookRequest) Reset() {
	*x = MarketOrderbookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coinmeca_grpc_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketOrderbookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketOrderbookRequest) ProtoMessage() {}

func (x *MarketOrderbookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coinmeca_grpc_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketOrderbookRequest.ProtoReflect.Descriptor instead.
func (*MarketOrderbookRequest) Descriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{22}
}

func (x *MarketOrderbookRequest) GetData() *MarketOrderbook {
	if x != nil {
		return x.Data
	}
	return nil
}

type MarketVolume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base  string `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Quote string `protobuf:"bytes,2,opt,name=quote,proto3" json:"quote,omitempty"`
}

func (x *MarketVolume) Reset() {
	*x = MarketVolume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coinmeca_grpc_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketVolume) ProtoMessage() {}

func (x *MarketVolume) ProtoReflect() protoreflect.Message {
	mi := &file_coinmeca_grpc_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketVolume.ProtoReflect.Descriptor instead.
func (*MarketVolume) Descriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{23}
}

func (x *MarketVolume) GetBase() string {
	if x != nil {
		return x.Base
	}
	return ""
}

func (x *MarketVolume) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

type MarketInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId   int64  `protobuf:"varint,1,opt,name=chainId,proto3" json:"chainId,omitempty"`
	Address   string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Base      string `protobuf:"bytes,3,opt,name=base,proto3" json:"base,omitempty"`
	Quote     string `protobuf:"bytes,4,opt,name=quote,proto3" json:"quote,omitempty"`
	Price     string `protobuf:"bytes,5,opt,name=price,proto3" json:"price,omitempty"`
	Tick      string `protobuf:"bytes,6,opt,name=tick,proto3" json:"tick,omitempty"`
	Fee       string `protobuf:"bytes,7,opt,name=fee,proto3" json:"fee,omitempty"`
	Threshold string `protobuf:"bytes,8,opt,name=threshold,proto3" json:"threshold,omitempty"`
	Lock      bool   `protobuf:"varint,9,opt,name=lock,proto3" json:"lock,omitempty"`
	UpdateAt  string `protobuf:"bytes,10,opt,name=updateAt,proto3" json:"updateAt,omitempty"`
}

func (x *MarketInfo) Reset() {
	*x = MarketInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coinmeca_grpc_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketInfo) ProtoMessage() {}

func (x *MarketInfo) ProtoReflect() protoreflect.Message {
	mi := &file_coinmeca_grpc_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketInfo.ProtoReflect.Descriptor instead.
func (*MarketInfo) Descriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{24}
}

func (x *MarketInfo) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *MarketInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *MarketInfo) GetBase() string {
	if x != nil {
		return x.Base
	}
	return ""
}

func (x *MarketInfo) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *MarketInfo) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *MarketInfo) GetTick() string {
	if x != nil {
		return x.Tick
	}
	return ""
}

func (x *MarketInfo) GetFee() string {
	if x != nil {
		return x.Fee
	}
	return ""
}

func (x *MarketInfo) GetThreshold() string {
	if x != nil {
		return x.Threshold
	}
	return ""
}

func (x *MarketInfo) GetLock() bool {
	if x != nil {
		return x.Lock
	}
	return false
}

func (x *MarketInfo) GetUpdateAt() string {
	if x != nil {
		return x.UpdateAt
	}
	return ""
}

type MarketRecentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *MarketRecent `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *MarketRecentRequest) Reset() {
	*x = MarketRecentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coinmeca_grpc_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketRecentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketRecentRequest) ProtoMessage() {}

func (x *MarketRecentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coinmeca_grpc_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketRecentRequest.ProtoReflect.Descriptor instead.
func (*MarketRecentRequest) Descriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{25}
}

func (x *MarketRecentRequest) GetData() *MarketRecent {
	if x != nil {
		return x.Data
	}
	return nil
}

type MarketRecent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId  int64           `protobuf:"varint,1,opt,name=chainId,proto3" json:"chainId,omitempty"`
	User     string          `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	Market   string          `protobuf:"bytes,3,opt,name=market,proto3" json:"market,omitempty"`
	Type     MarketTradeType `protobuf:"varint,4,opt,name=type,proto3,enum=grpcmodule.MarketTradeType" json:"type,omitempty"`
	Time     string          `protobuf:"bytes,5,opt,name=time,proto3" json:"time,omitempty"`
	Price    float64         `protobuf:"fixed64,6,opt,name=price,proto3" json:"price,omitempty"`
	Amount   float64         `protobuf:"fixed64,7,opt,name=amount,proto3" json:"amount,omitempty"`
	Quantity float64         `protobuf:"fixed64,8,opt,name=quantity,proto3" json:"quantity,omitempty"`
	TxHash   string          `protobuf:"bytes,9,opt,name=txHash,proto3" json:"txHash,omitempty"`
	UpdateAt string          `protobuf:"bytes,10,opt,name=updateAt,proto3" json:"updateAt,omitempty"`
}

func (x *MarketRecent) Reset() {
	*x = MarketRecent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coinmeca_grpc_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketRecent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketRecent) ProtoMessage() {}

func (x *MarketRecent) ProtoReflect() protoreflect.Message {
	mi := &file_coinmeca_grpc_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketRecent.ProtoReflect.Descriptor instead.
func (*MarketRecent) Descriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{26}
}

func (x *MarketRecent) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *MarketRecent) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *MarketRecent) GetMarket() string {
	if x != nil {
		return x.Market
	}
	return ""
}

func (x *MarketRecent) GetType() MarketTradeType {
	if x != nil {
		return x.Type
	}
	return MarketTradeType_Buy
}

func (x *MarketRecent) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *MarketRecent) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *MarketRecent) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *MarketRecent) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *MarketRecent) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *MarketRecent) GetUpdateAt() string {
	if x != nil {
		return x.UpdateAt
	}
	return ""
}

type MarketOrderbookRecentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *MarketOrderbookRecent `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *MarketOrderbookRecentRequest) Reset() {
	*x = MarketOrderbookRecentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coinmeca_grpc_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketOrderbookRecentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketOrderbookRecentRequest) ProtoMessage() {}

func (x *MarketOrderbookRecentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coinmeca_grpc_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketOrderbookRecentRequest.ProtoReflect.Descriptor instead.
func (*MarketOrderbookRecentRequest) Descriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{27}
}

func (x *MarketOrderbookRecentRequest) GetData() *MarketOrderbookRecent {
	if x != nil {
		return x.Data
	}
	return nil
}

type MarketOrderbookRecent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId       int64            `protobuf:"varint,1,opt,name=chainId,proto3" json:"chainId,omitempty"`
	OrderbookInfo []*OrderbookInfo `protobuf:"bytes,2,rep,name=orderbookInfo,proto3" json:"orderbookInfo,omitempty"`
}

func (x *MarketOrderbookRecent) Reset() {
	*x = MarketOrderbookRecent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coinmeca_grpc_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketOrderbookRecent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketOrderbookRecent) ProtoMessage() {}

func (x *MarketOrderbookRecent) ProtoReflect() protoreflect.Message {
	mi := &file_coinmeca_grpc_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketOrderbookRecent.ProtoReflect.Descriptor instead.
func (*MarketOrderbookRecent) Descriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{28}
}

func (x *MarketOrderbookRecent) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *MarketOrderbookRecent) GetOrderbookInfo() []*OrderbookInfo {
	if x != nil {
		return x.OrderbookInfo
	}
	return nil
}

type OrderbookInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market    string           `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	Orderbook *MarketOrderbook `protobuf:"bytes,2,opt,name=orderbook,proto3" json:"orderbook,omitempty"`
}

func (x *OrderbookInfo) Reset() {
	*x = OrderbookInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coinmeca_grpc_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderbookInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderbookInfo) ProtoMessage() {}

func (x *OrderbookInfo) ProtoReflect() protoreflect.Message {
	mi := &file_coinmeca_grpc_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderbookInfo.ProtoReflect.Descriptor instead.
func (*OrderbookInfo) Descriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{29}
}

func (x *OrderbookInfo) GetMarket() string {
	if x != nil {
		return x.Market
	}
	return ""
}

func (x *OrderbookInfo) GetOrderbook() *MarketOrderbook {
	if x != nil {
		return x.Orderbook
	}
	return nil
}

type MarketLastRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *MarketLast `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *MarketLastRequest) Reset() {
	*x = MarketLastRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coinmeca_grpc_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketLastRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketLastRequest) ProtoMessage() {}

func (x *MarketLastRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coinmeca_grpc_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketLastRequest.ProtoReflect.Descriptor instead.
func (*MarketLastRequest) Descriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{30}
}

func (x *MarketLastRequest) GetData() *MarketLast {
	if x != nil {
		return x.Data
	}
	return nil
}

type MarketLast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId        int64  `protobuf:"varint,1,opt,name=chainId,proto3" json:"chainId,omitempty"`
	Market         string `protobuf:"bytes,2,opt,name=market,proto3" json:"market,omitempty"`
	Price          string `protobuf:"bytes,3,opt,name=price,proto3" json:"price,omitempty"`
	LastPrice      string `protobuf:"bytes,4,opt,name=lastPrice,proto3" json:"lastPrice,omitempty"`
	High           string `protobuf:"bytes,5,opt,name=high,proto3" json:"high,omitempty"`
	Low            string `protobuf:"bytes,6,opt,name=low,proto3" json:"low,omitempty"`
	VolumeBase     string `protobuf:"bytes,7,opt,name=volumeBase,proto3" json:"volumeBase,omitempty"`
	VolumeQuote    string `protobuf:"bytes,8,opt,name=volumeQuote,proto3" json:"volumeQuote,omitempty"`
	LiquidityBase  string `protobuf:"bytes,9,opt,name=liquidityBase,proto3" json:"liquidityBase,omitempty"`
	LiquidityQuote string `protobuf:"bytes,10,opt,name=liquidityQuote,proto3" json:"liquidityQuote,omitempty"`
}

func (x *MarketLast) Reset() {
	*x = MarketLast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coinmeca_grpc_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketLast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketLast) ProtoMessage() {}

func (x *MarketLast) ProtoReflect() protoreflect.Message {
	mi := &file_coinmeca_grpc_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketLast.ProtoReflect.Descriptor instead.
func (*MarketLast) Descriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{31}
}

func (x *MarketLast) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *MarketLast) GetMarket() string {
	if x != nil {
		return x.Market
	}
	return ""
}

func (x *MarketLast) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *MarketLast) GetLastPrice() string {
	if x != nil {
		return x.LastPrice
	}
	return ""
}

func (x *MarketLast) GetHigh() string {
	if x != nil {
		return x.High
	}
	return ""
}

func (x *MarketLast) GetLow() string {
	if x != nil {
		return x.Low
	}
	return ""
}

func (x *MarketLast) GetVolumeBase() string {
	if x != nil {
		return x.VolumeBase
	}
	return ""
}

func (x *MarketLast) GetVolumeQuote() string {
	if x != nil {
		return x.VolumeQuote
	}
	return ""
}

func (x *MarketLast) GetLiquidityBase() string {
	if x != nil {
		return x.LiquidityBase
	}
	return ""
}

func (x *MarketLast) GetLiquidityQuote() string {
	if x != nil {
		return x.LiquidityQuote
	}
	return ""
}

// ====================================
// Farm
// ====================================
type FarmRecentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *FarmRecent `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *FarmRecentRequest) Reset() {
	*x = FarmRecentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coinmeca_grpc_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FarmRecentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FarmRecentRequest) ProtoMessage() {}

func (x *FarmRecentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coinmeca_grpc_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FarmRecentRequest.ProtoReflect.Descriptor instead.
func (*FarmRecentRequest) Descriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{32}
}

func (x *FarmRecentRequest) GetData() *FarmRecent {
	if x != nil {
		return x.Data
	}
	return nil
}

type FarmRecent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId  int64         `protobuf:"varint,1,opt,name=chainId,proto3" json:"chainId,omitempty"`
	Farm     string        `protobuf:"bytes,2,opt,name=farm,proto3" json:"farm,omitempty"`
	User     string        `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Type     FarmTradeType `protobuf:"varint,4,opt,name=type,proto3,enum=grpcmodule.FarmTradeType" json:"type,omitempty"`
	Time     string        `protobuf:"bytes,5,opt,name=time,proto3" json:"time,omitempty"`
	Value    float64       `protobuf:"fixed64,6,opt,name=value,proto3" json:"value,omitempty"`
	Share    float64       `protobuf:"fixed64,7,opt,name=share,proto3" json:"share,omitempty"`
	TxHash   string        `protobuf:"bytes,8,opt,name=txHash,proto3" json:"txHash,omitempty"`
	UpdateAt string        `protobuf:"bytes,9,opt,name=updateAt,proto3" json:"updateAt,omitempty"`
}

func (x *FarmRecent) Reset() {
	*x = FarmRecent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coinmeca_grpc_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FarmRecent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FarmRecent) ProtoMessage() {}

func (x *FarmRecent) ProtoReflect() protoreflect.Message {
	mi := &file_coinmeca_grpc_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FarmRecent.ProtoReflect.Descriptor instead.
func (*FarmRecent) Descriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{33}
}

func (x *FarmRecent) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *FarmRecent) GetFarm() string {
	if x != nil {
		return x.Farm
	}
	return ""
}

func (x *FarmRecent) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *FarmRecent) GetType() FarmTradeType {
	if x != nil {
		return x.Type
	}
	return FarmTradeType_STAKING
}

func (x *FarmRecent) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *FarmRecent) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *FarmRecent) GetShare() float64 {
	if x != nil {
		return x.Share
	}
	return 0
}

func (x *FarmRecent) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *FarmRecent) GetUpdateAt() string {
	if x != nil {
		return x.UpdateAt
	}
	return ""
}

type FarmRecentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *FarmRecentResponse) Reset() {
	*x = FarmRecentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coinmeca_grpc_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FarmRecentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FarmRecentResponse) ProtoMessage() {}

func (x *FarmRecentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coinmeca_grpc_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FarmRecentResponse.ProtoReflect.Descriptor instead.
func (*FarmRecentResponse) Descriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{34}
}

func (x *FarmRecentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type FarmInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *FarmInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *FarmInfoRequest) Reset() {
	*x = FarmInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coinmeca_grpc_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FarmInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FarmInfoRequest) ProtoMessage() {}

func (x *FarmInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coinmeca_grpc_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FarmInfoRequest.ProtoReflect.Descriptor instead.
func (*FarmInfoRequest) Descriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{35}
}

func (x *FarmInfoRequest) GetData() *FarmInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type FarmInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId  int64  `protobuf:"varint,1,opt,name=chainId,proto3" json:"chainId,omitempty"`
	Id       int64  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Address  string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Master   string `protobuf:"bytes,4,opt,name=master,proto3" json:"master,omitempty"`
	Name     string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Stake    string `protobuf:"bytes,6,opt,name=stake,proto3" json:"stake,omitempty"`
	Earn     string `protobuf:"bytes,7,opt,name=earn,proto3" json:"earn,omitempty"`
	Start    string `protobuf:"bytes,8,opt,name=start,proto3" json:"start,omitempty"`
	Period   string `protobuf:"bytes,9,opt,name=period,proto3" json:"period,omitempty"`
	Duration string `protobuf:"bytes,10,opt,name=duration,proto3" json:"duration,omitempty"`
	Goal     string `protobuf:"bytes,11,opt,name=goal,proto3" json:"goal,omitempty"`
	Locked   string `protobuf:"bytes,12,opt,name=locked,proto3" json:"locked,omitempty"`
	Rewards  string `protobuf:"bytes,13,opt,name=rewards,proto3" json:"rewards,omitempty"`
	Total    string `protobuf:"bytes,14,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *FarmInfo) Reset() {
	*x = FarmInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coinmeca_grpc_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FarmInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FarmInfo) ProtoMessage() {}

func (x *FarmInfo) ProtoReflect() protoreflect.Message {
	mi := &file_coinmeca_grpc_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FarmInfo.ProtoReflect.Descriptor instead.
func (*FarmInfo) Descriptor() ([]byte, []int) {
	return file_coinmeca_grpc_proto_rawDescGZIP(), []int{36}
}

func (x *FarmInfo) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *FarmInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FarmInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *FarmInfo) GetMaster() string {
	if x != nil {
		return x.Master
	}
	return ""
}

func (x *FarmInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FarmInfo) GetStake() string {
	if x != nil {
		return x.Stake
	}
	return ""
}

func (x *FarmInfo) GetEarn() string {
	if x != nil {
		return x.Earn
	}
	return ""
}

func (x *FarmInfo) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *FarmInfo) GetPeriod() string {
	if x != nil {
		return x.Period
	}
	return ""
}

func (x *FarmInfo) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *FarmInfo) GetGoal() string {
	if x != nil {
		return x.Goal
	}
	return ""
}

func (x *FarmInfo) GetLocked() string {
	if x != nil {
		return x.Locked
	}
	return ""
}

func (x *FarmInfo) GetRewards() string {
	if x != nil {
		return x.Rewards
	}
	return ""
}

func (x *FarmInfo) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

var File_coinmeca_grpc_proto protoreflect.FileDescriptor

var file_coinmeca_grpc_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x6f, 0x69, 0x6e, 0x6d, 0x65, 0x63, 0x61, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x67, 0x72, 0x70, 0x63, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x22, 0xfa, 0x07, 0x0a, 0x0e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x0b, 0x76, 0x61, 0x75, 0x6c,
	0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x56, 0x61, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x0b, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x09,
	0x76, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x56, 0x61, 0x75,
	0x6c, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x09, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x45, 0x0a, 0x0c, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74,
	0x65, 0x12, 0x45, 0x0a, 0x0c, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x4e, 0x0a, 0x0f, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x51, 0x0a, 0x10, 0x76, 0x61, 0x75, 0x6c,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x56, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x76, 0x61, 0x75, 0x6c, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x3f, 0x0a, 0x0a, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x0a, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x39, 0x0a, 0x08,
	0x66, 0x61, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x46, 0x61, 0x72, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x08, 0x66,
	0x61, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3f, 0x0a, 0x0a, 0x66, 0x61, 0x72, 0x6d, 0x52,
	0x65, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x46, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x63,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x61,
	0x72, 0x6d, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x09, 0x76, 0x61, 0x75, 0x6c,
	0x74, 0x4c, 0x61, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x61,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x09, 0x76, 0x61, 0x75,
	0x6c, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x0d, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x32,
	0x34, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x56, 0x61, 0x75, 0x6c, 0x74,
	0x32, 0x34, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x0d, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x32, 0x34, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x12, 0x60, 0x0a, 0x15, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x62,
	0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x63, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x15, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x63, 0x65,
	0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x0a, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4c,
	0x61, 0x73, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2b,
	0x0a, 0x0f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x41, 0x0a, 0x12, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa7,
	0x02, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x20, 0x0a, 0x0b,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x46, 0x72, 0x6f, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x54, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x54, 0x6f,
	0x12, 0x10, 0x0a, 0x03, 0x47, 0x61, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x47,
	0x61, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x43, 0x61, 0x74, 0x65, 0x22, 0x2f, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x41, 0x0a, 0x12, 0x56, 0x61, 0x75,
	0x6c, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x56, 0x61, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8b, 0x02, 0x0a,
	0x0b, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x12, 0x2e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x56, 0x61, 0x75, 0x6c,
	0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6d, 0x65, 0x63, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6d, 0x65, 0x63, 0x61,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0x2f, 0x0a, 0x13, 0x56, 0x61,
	0x75, 0x6c, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x3d, 0x0a, 0x10, 0x56,
	0x61, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x56, 0x61, 0x75, 0x6c, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa3, 0x02, 0x0a, 0x09, 0x56,
	0x61, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x65, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x43, 0x0a, 0x13, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x68, 0x0a, 0x0c, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12,
	0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x55, 0x73, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x53, 0x65, 0x74, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x22,
	0x4c, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x55, 0x73, 0x64, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x53, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x4b, 0x0a,
	0x17, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd4, 0x01, 0x0a, 0x10, 0x56,
	0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65,
	0x64, 0x22, 0x3d, 0x0a, 0x10, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0xcb, 0x01, 0x0a, 0x09, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x74, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x76, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x74, 0x76, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x45,
	0x0a, 0x14, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x32, 0x34, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x32, 0x34, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x83, 0x02, 0x0a, 0x0d, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x32,
	0x34, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x32, 0x34, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x32, 0x34, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x32, 0x34, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x32, 0x34, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x69, 0x6e, 0x74, 0x4d,
	0x65, 0x63, 0x61, 0x32, 0x34, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x69,
	0x6e, 0x74, 0x4d, 0x65, 0x63, 0x61, 0x32, 0x34, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x75, 0x72,
	0x6e, 0x4d, 0x65, 0x63, 0x61, 0x32, 0x34, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x62, 0x75, 0x72, 0x6e, 0x4d, 0x65, 0x63, 0x61, 0x32, 0x34, 0x68, 0x22, 0x36, 0x0a, 0x04, 0x54,
	0x69, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x22, 0x3f, 0x0a, 0x11, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x5d, 0x0a, 0x0f, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x24, 0x0a, 0x04, 0x61, 0x73, 0x6b, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x52, 0x04, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x24, 0x0a,
	0x04, 0x62, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x52, 0x04, 0x62,
	0x69, 0x64, 0x73, 0x22, 0x49, 0x0a, 0x16, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x38,
	0x0a, 0x0c, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x22, 0xf4, 0x01, 0x0a, 0x0a, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x12,
	0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x66, 0x65,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22,
	0x43, 0x0a, 0x13, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x97, 0x02, 0x0a, 0x0c, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52,
	0x65, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78,
	0x48, 0x61, 0x73, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0x55,
	0x0a, 0x1c, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f,
	0x6b, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x72, 0x0a, 0x15, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x62, 0x0a, 0x0d, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x12, 0x39, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f,
	0x6f, 0x6b, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x22, 0x3f, 0x0a,
	0x11, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa8,
	0x02, 0x0a, 0x0a, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x77, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x42, 0x61, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x42, 0x61, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6c,
	0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x42, 0x61, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x42, 0x61, 0x73,
	0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x51, 0x75,
	0x6f, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x69, 0x71, 0x75, 0x69,
	0x64, 0x69, 0x74, 0x79, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x22, 0x3f, 0x0a, 0x11, 0x46, 0x61, 0x72,
	0x6d, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x46, 0x61, 0x72, 0x6d, 0x52, 0x65,
	0x63, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xf1, 0x01, 0x0a, 0x0a, 0x46,
	0x61, 0x72, 0x6d, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x66, 0x61, 0x72, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x46, 0x61, 0x72, 0x6d, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78,
	0x48, 0x61, 0x73, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0x2e,
	0x0a, 0x12, 0x46, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x3b,
	0x0a, 0x0f, 0x46, 0x61, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x46, 0x61, 0x72,
	0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xca, 0x02, 0x0a, 0x08,
	0x46, 0x61, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x6b,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x65, 0x61, 0x72, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x61,
	0x72, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x67, 0x6f, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x6f, 0x61, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x2a, 0x2b, 0x0a, 0x0e, 0x56, 0x61, 0x75, 0x6c,
	0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45,
	0x50, 0x4f, 0x53, 0x49, 0x54, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x57, 0x49, 0x54, 0x48, 0x44,
	0x52, 0x41, 0x57, 0x10, 0x01, 0x2a, 0x36, 0x0a, 0x0f, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x75, 0x79, 0x10,
	0x00, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x65, 0x6c, 0x6c, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x42,
	0x69, 0x64, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x73, 0x6b, 0x10, 0x03, 0x2a, 0x29, 0x0a,
	0x0d, 0x46, 0x61, 0x72, 0x6d, 0x54, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b,
	0x0a, 0x07, 0x53, 0x54, 0x41, 0x4b, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x55,
	0x4e, 0x53, 0x54, 0x41, 0x4b, 0x45, 0x10, 0x01, 0x32, 0x5a, 0x0a, 0x12, 0x43, 0x6f, 0x69, 0x6e,
	0x6d, 0x65, 0x63, 0x61, 0x47, 0x72, 0x70, 0x63, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x44,
	0x0a, 0x07, 0x41, 0x64, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_coinmeca_grpc_proto_rawDescOnce sync.Once
	file_coinmeca_grpc_proto_rawDescData = file_coinmeca_grpc_proto_rawDesc
)

func file_coinmeca_grpc_proto_rawDescGZIP() []byte {
	file_coinmeca_grpc_proto_rawDescOnce.Do(func() {
		file_coinmeca_grpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_coinmeca_grpc_proto_rawDescData)
	})
	return file_coinmeca_grpc_proto_rawDescData
}

var file_coinmeca_grpc_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_coinmeca_grpc_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_coinmeca_grpc_proto_goTypes = []interface{}{
	(VaultTradeType)(0),                  // 0: grpcmodule.VaultTradeType
	(MarketTradeType)(0),                 // 1: grpcmodule.MarketTradeType
	(FarmTradeType)(0),                   // 2: grpcmodule.FarmTradeType
	(*GeneralRequest)(nil),               // 3: grpcmodule.GeneralRequest
	(*GeneralResponse)(nil),              // 4: grpcmodule.GeneralResponse
	(*TransactionRequest)(nil),           // 5: grpcmodule.TransactionRequest
	(*Transaction)(nil),                  // 6: grpcmodule.Transaction
	(*TransactionResponse)(nil),          // 7: grpcmodule.TransactionResponse
	(*VaultRecentRequest)(nil),           // 8: grpcmodule.VaultRecentRequest
	(*VaultRecent)(nil),                  // 9: grpcmodule.VaultRecent
	(*VaultRecentResponse)(nil),          // 10: grpcmodule.VaultRecentResponse
	(*VaultInfoRequest)(nil),             // 11: grpcmodule.VaultInfoRequest
	(*VaultInfo)(nil),                    // 12: grpcmodule.VaultInfo
	(*ExchangeRateRequest)(nil),          // 13: grpcmodule.ExchangeRateRequest
	(*ExchangeRate)(nil),                 // 14: grpcmodule.ExchangeRate
	(*AddressUsdPriceSet)(nil),           // 15: grpcmodule.AddressUsdPriceSet
	(*VaultValueLockedRequest)(nil),      // 16: grpcmodule.VaultValueLockedRequest
	(*VaultValueLocked)(nil),             // 17: grpcmodule.VaultValueLocked
	(*VaultLastRequest)(nil),             // 18: grpcmodule.VaultLastRequest
	(*VaultLast)(nil),                    // 19: grpcmodule.VaultLast
	(*Vault24HInfosRequest)(nil),         // 20: grpcmodule.Vault24hInfosRequest
	(*Vault24HInfos)(nil),                // 21: grpcmodule.Vault24hInfos
	(*Tick)(nil),                         // 22: grpcmodule.Tick
	(*MarketInfoRequest)(nil),            // 23: grpcmodule.MarketInfoRequest
	(*MarketOrderbook)(nil),              // 24: grpcmodule.MarketOrderbook
	(*MarketOrderbookRequest)(nil),       // 25: grpcmodule.MarketOrderbookRequest
	(*MarketVolume)(nil),                 // 26: grpcmodule.MarketVolume
	(*MarketInfo)(nil),                   // 27: grpcmodule.MarketInfo
	(*MarketRecentRequest)(nil),          // 28: grpcmodule.MarketRecentRequest
	(*MarketRecent)(nil),                 // 29: grpcmodule.MarketRecent
	(*MarketOrderbookRecentRequest)(nil), // 30: grpcmodule.MarketOrderbookRecentRequest
	(*MarketOrderbookRecent)(nil),        // 31: grpcmodule.MarketOrderbookRecent
	(*OrderbookInfo)(nil),                // 32: grpcmodule.OrderbookInfo
	(*MarketLastRequest)(nil),            // 33: grpcmodule.MarketLastRequest
	(*MarketLast)(nil),                   // 34: grpcmodule.MarketLast
	(*FarmRecentRequest)(nil),            // 35: grpcmodule.FarmRecentRequest
	(*FarmRecent)(nil),                   // 36: grpcmodule.FarmRecent
	(*FarmRecentResponse)(nil),           // 37: grpcmodule.FarmRecentResponse
	(*FarmInfoRequest)(nil),              // 38: grpcmodule.FarmInfoRequest
	(*FarmInfo)(nil),                     // 39: grpcmodule.FarmInfo
}
var file_coinmeca_grpc_proto_depIdxs = []int32{
	5,  // 0: grpcmodule.GeneralRequest.transaction:type_name -> grpcmodule.TransactionRequest
	8,  // 1: grpcmodule.GeneralRequest.vaultRecent:type_name -> grpcmodule.VaultRecentRequest
	11, // 2: grpcmodule.GeneralRequest.vaultInfo:type_name -> grpcmodule.VaultInfoRequest
	13, // 3: grpcmodule.GeneralRequest.exchangeRate:type_name -> grpcmodule.ExchangeRateRequest
	28, // 4: grpcmodule.GeneralRequest.marketRecent:type_name -> grpcmodule.MarketRecentRequest
	25, // 5: grpcmodule.GeneralRequest.marketOrderbook:type_name -> grpcmodule.MarketOrderbookRequest
	16, // 6: grpcmodule.GeneralRequest.vaultValueLocked:type_name -> grpcmodule.VaultValueLockedRequest
	23, // 7: grpcmodule.GeneralRequest.marketInfo:type_name -> grpcmodule.MarketInfoRequest
	38, // 8: grpcmodule.GeneralRequest.farmInfo:type_name -> grpcmodule.FarmInfoRequest
	35, // 9: grpcmodule.GeneralRequest.farmRecent:type_name -> grpcmodule.FarmRecentRequest
	18, // 10: grpcmodule.GeneralRequest.vaultLast:type_name -> grpcmodule.VaultLastRequest
	20, // 11: grpcmodule.GeneralRequest.vault24hInfos:type_name -> grpcmodule.Vault24hInfosRequest
	30, // 12: grpcmodule.GeneralRequest.marketOrderbookRecent:type_name -> grpcmodule.MarketOrderbookRecentRequest
	33, // 13: grpcmodule.GeneralRequest.MarketLast:type_name -> grpcmodule.MarketLastRequest
	6,  // 14: grpcmodule.TransactionRequest.data:type_name -> grpcmodule.Transaction
	9,  // 15: grpcmodule.VaultRecentRequest.data:type_name -> grpcmodule.VaultRecent
	0,  // 16: grpcmodule.VaultRecent.type:type_name -> grpcmodule.VaultTradeType
	12, // 17: grpcmodule.VaultInfoRequest.data:type_name -> grpcmodule.VaultInfo
	14, // 18: grpcmodule.ExchangeRateRequest.data:type_name -> grpcmodule.ExchangeRate
	15, // 19: grpcmodule.ExchangeRate.userPrices:type_name -> grpcmodule.AddressUsdPriceSet
	17, // 20: grpcmodule.VaultValueLockedRequest.data:type_name -> grpcmodule.VaultValueLocked
	19, // 21: grpcmodule.VaultLastRequest.data:type_name -> grpcmodule.VaultLast
	21, // 22: grpcmodule.Vault24hInfosRequest.data:type_name -> grpcmodule.Vault24hInfos
	27, // 23: grpcmodule.MarketInfoRequest.data:type_name -> grpcmodule.MarketInfo
	22, // 24: grpcmodule.MarketOrderbook.asks:type_name -> grpcmodule.Tick
	22, // 25: grpcmodule.MarketOrderbook.bids:type_name -> grpcmodule.Tick
	24, // 26: grpcmodule.MarketOrderbookRequest.data:type_name -> grpcmodule.MarketOrderbook
	29, // 27: grpcmodule.MarketRecentRequest.data:type_name -> grpcmodule.MarketRecent
	1,  // 28: grpcmodule.MarketRecent.type:type_name -> grpcmodule.MarketTradeType
	31, // 29: grpcmodule.MarketOrderbookRecentRequest.data:type_name -> grpcmodule.MarketOrderbookRecent
	32, // 30: grpcmodule.MarketOrderbookRecent.orderbookInfo:type_name -> grpcmodule.OrderbookInfo
	24, // 31: grpcmodule.OrderbookInfo.orderbook:type_name -> grpcmodule.MarketOrderbook
	34, // 32: grpcmodule.MarketLastRequest.data:type_name -> grpcmodule.MarketLast
	36, // 33: grpcmodule.FarmRecentRequest.data:type_name -> grpcmodule.FarmRecent
	2,  // 34: grpcmodule.FarmRecent.type:type_name -> grpcmodule.FarmTradeType
	39, // 35: grpcmodule.FarmInfoRequest.data:type_name -> grpcmodule.FarmInfo
	3,  // 36: grpcmodule.CoinmecaGrpcModule.AddData:input_type -> grpcmodule.GeneralRequest
	4,  // 37: grpcmodule.CoinmecaGrpcModule.AddData:output_type -> grpcmodule.GeneralResponse
	37, // [37:38] is the sub-list for method output_type
	36, // [36:37] is the sub-list for method input_type
	36, // [36:36] is the sub-list for extension type_name
	36, // [36:36] is the sub-list for extension extendee
	0,  // [0:36] is the sub-list for field type_name
}

func init() { file_coinmeca_grpc_proto_init() }
func file_coinmeca_grpc_proto_init() {
	if File_coinmeca_grpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_coinmeca_grpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneralRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coinmeca_grpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneralResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coinmeca_grpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coinmeca_grpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coinmeca_grpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coinmeca_grpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VaultRecentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coinmeca_grpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VaultRecent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coinmeca_grpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VaultRecentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coinmeca_grpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VaultInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coinmeca_grpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VaultInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coinmeca_grpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeRateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coinmeca_grpc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coinmeca_grpc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressUsdPriceSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coinmeca_grpc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VaultValueLockedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coinmeca_grpc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VaultValueLocked); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coinmeca_grpc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VaultLastRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coinmeca_grpc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VaultLast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coinmeca_grpc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vault24HInfosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coinmeca_grpc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vault24HInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coinmeca_grpc_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coinmeca_grpc_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coinmeca_grpc_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketOrderbook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coinmeca_grpc_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketOrderbookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coinmeca_grpc_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketVolume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coinmeca_grpc_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coinmeca_grpc_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketRecentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coinmeca_grpc_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketRecent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coinmeca_grpc_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketOrderbookRecentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coinmeca_grpc_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketOrderbookRecent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coinmeca_grpc_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderbookInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coinmeca_grpc_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketLastRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coinmeca_grpc_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketLast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coinmeca_grpc_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FarmRecentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coinmeca_grpc_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FarmRecent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coinmeca_grpc_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FarmRecentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coinmeca_grpc_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FarmInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coinmeca_grpc_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FarmInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_coinmeca_grpc_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*GeneralRequest_Transaction)(nil),
		(*GeneralRequest_VaultRecent)(nil),
		(*GeneralRequest_VaultInfo)(nil),
		(*GeneralRequest_ExchangeRate)(nil),
		(*GeneralRequest_MarketRecent)(nil),
		(*GeneralRequest_MarketOrderbook)(nil),
		(*GeneralRequest_VaultValueLocked)(nil),
		(*GeneralRequest_MarketInfo)(nil),
		(*GeneralRequest_FarmInfo)(nil),
		(*GeneralRequest_FarmRecent)(nil),
		(*GeneralRequest_VaultLast)(nil),
		(*GeneralRequest_Vault24HInfos)(nil),
		(*GeneralRequest_MarketOrderbookRecent)(nil),
		(*GeneralRequest_MarketLast)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_coinmeca_grpc_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_coinmeca_grpc_proto_goTypes,
		DependencyIndexes: file_coinmeca_grpc_proto_depIdxs,
		EnumInfos:         file_coinmeca_grpc_proto_enumTypes,
		MessageInfos:      file_coinmeca_grpc_proto_msgTypes,
	}.Build()
	File_coinmeca_grpc_proto = out.File
	file_coinmeca_grpc_proto_rawDesc = nil
	file_coinmeca_grpc_proto_goTypes = nil
	file_coinmeca_grpc_proto_depIdxs = nil
}
