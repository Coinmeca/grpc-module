syntax="proto3";

package grpcmodule;

option go_package="./";

service CoinmecaGrpcModule {
  rpc AddData (GeneralRequest) returns (GeneralResponse) {}
}

message GeneralRequest {
  oneof request {
    TransactionRequest transaction=1;
    VaultRecentRequest vaultRecent=2;
    VaultInfoRequest vaultInfo=3;
    VaultChartRequest vaultChart=4;
    VaultChartSubRequest vaultChartSub=5;
    VaultLastRequest vaultLast=6;
    MarketRecentRequest marketRecent=7;
    MarketInfoRequest marketInfo=8;
    MarketOrderbookRequest marketOrderbook=9;
    MarketChartRequest marketChart=10;
    MarketLastRequest marketLast=11;
    FarmInfoRequest farmInfo=12;
    FarmRecentRequest farmRecent=13;
  }
}

message GeneralResponse {
  bool success=1;
}

//====================================
// AddTransaction
//====================================
message TransactionRequest {
  Transaction data=1;
}

message Transaction {
  string Id=1;
  string BlockHash=2;
  string BlockNumber=3;
  string Hash=4;
  repeated string AccessList=5;
  string ChainId=6;
  string From=7;
  string To=8;
  string Gas=9;
  string GasPrice=10;
  string Input=11;
  string Cate=12;
}

message TransactionResponse {
  bool success=1;
}

message Token {
  string address=1;
  string name=2;
  string symbol=3;
  int64 decimals=4;
  string liquidity=5;
}

//====================================
// Vault
//====================================
message VaultRecentRequest {
  VaultRecent data=1;
}

message VaultRecent {
  string chainId=1;
  string address=2;
  string user=3;
  VaultTradeType type=4;
  int64 time=5;
  string amount=6;
  string meca=7;
  string share=8;
  string txHash=9;
  string updateAt=10;
}

message VaultRecentResponse {
  bool success=1;
}

enum VaultTradeType {
  DEPOSIT=0;
  WITHDRAW=1;
}

message VaultInfoRequest {
  VaultInfo data=1;
}

message VaultInfo{
  string chainId=1;
  string address=2;
  bool key=3;
  string name=4;
  string symbol=5;
  int64 decimals=6;
  string exchange=7;
  string rate=8;
  string locked=9;
  string weight=10;
  string need=11;
  string value=12;
}

message VaultChartRequest {
  VaultChart data=1;
}

message VaultChart {
  string chainId=1;
  string address=2;
  int64 time=3;
  string open=4;
  string high=5;
  string low=6;
  string close=7;
  string volume=8;
}

message VaultChartSubRequest {
  VaultChartSub data=1;
}

message VaultChartSub {
  string chainId=1;
  string address=2;
  int64 time=3;
  string weight=4;
  string locked=5;
  string value=6;
  string valueLocked=7;
}

message VaultLastRequest{
  VaultLast data=1;
}

message VaultLast{
  string chainId=1;
  string address=2;
  string exchange=3;
  string locked=4;
  string valueLocked=5;
  string weight=6;
  string deposit=7;
  string withdraw=8;
  string mint=9;
  string burn=10;
}

//====================================
// Market
//====================================

enum MarketTradeType {
  BUY=0;
  SELL=1;
  BID=2;
  ASK=3;
}

message MarketInfoRequest {
  MarketInfo data=1;
}

message MarketInfo {
  string chainId=1;
  string address=2;
  string name=3;
  string symbol=4;
  Token base=5;
  Token quote=6;
  string price=7;
  string tick=8;
  MarketOrderbook orderbook=11;
  MarketLiquidity liquidity=12;
  int64 fee=9;
  int64 threshold=10;
  bool lock=13;
}

message MarketRecentRequest {
  MarketRecent data=1;
}

message MarketRecent {
  string chainId=1;
  string address=2;
  int64 time=3;
  MarketTradeType type=4;
  string user=5;
  string price=6;
  string amount=7;
  string quantity=8;
  string txHash=9;
  string updateAt=10;
}

message Tick {
  string price=1;
  string balance=2;
}

message MarketOrderbookRequest {
  MarketOrderbook data=1;
}

message MarketOrderbook {
  repeated Tick asks=1;
  repeated Tick bids=2;
}

message MarketLiquidity{
  string base=1;
  string quote=2;
}

message MarketVolume{
  string base=1;
  string quote=2;
}

message MarketLastRequest {
  MarketLast data=1;
}

message MarketChartRequest {
  MarketChart data=1;
}

message MarketChart {
  string chainId=1;
  string address=2;
  int64 time=3;
  string open=4;
  string high=5;
  string low=6;
  string close=7;
  MarketVolume volume=8;
}

message MarketLast {
  string chainId=1;
  string address=2;
  string price=4;
  string high=5;
  string low=6;
  MarketVolume volume=7;
  MarketLiquidity liquidity=8;
}

//====================================
// Farm
//====================================
message FarmRecentRequest {
  FarmRecent data=1;
}

message FarmRecent {
  string chainId=1;
  string address=2;
  int64 time=3;
  FarmTradeType type=4;
  string user=5;
  string amount=6;
  string share=7;
  string txHash=8;
  string updateAt=9;
}

message FarmRecentResponse {
  bool success=1;
}

enum FarmTradeType {
  STAKING=0;
  UNSTAKE=1;
  HARVEST=2;
  CLAIM=3;
}

message FarmInfoRequest {
  FarmInfo data=1;
}

message FarmInfo{
  string chainId=1;
  string address=2;
  int64 id=3;
  string master=4;
  string name=5;
  Token stake=6;
  Token earn=7;
  string start=8;
  string period=9;
  string duration=10;
  string goal=11;
  string locked=12;
  string rewards=13;
  string total=14;
}
