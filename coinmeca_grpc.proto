syntax = "proto3";

package grpcmodule;

option go_package = "./";

service CoinmecaGrpcModule {
  rpc AddData (GeneralRequest) returns (GeneralResponse) {}
}

message GeneralRequest {
  oneof request {
    TransactionRequest transaction = 1;
    VaultRecentRequest vaultRecent = 2;
    GetAllFromVaultRequest getAllFromVault =3;
    ExchangeRateRequest exchangeRateRequest=4;
  }
}

message GeneralResponse {
  bool success = 1;
}

// ====================================
// AddTransaction
// ====================================
message TransactionRequest {
  Transaction data = 1;
}

message Transaction {
  string Id = 1;
  string BlockHash = 2;
  string BlockNumber = 3;
  string Hash = 4;
  repeated string AccessList = 5;
  string ChainId = 6;
  string From = 7;
  string To = 8;
  string Gas = 9;
  string GasPrice = 10;
  string Input = 11;
  string Cate = 12;
}

message TransactionResponse {
  bool success = 1;
}

// ====================================
// Vault
// ====================================
message VaultRecentRequest {
  VaultRecent data = 1;
}

message VaultRecent {
  int64 chainId=1;
  string tokenAddress=2;
  string ownerAddress=3;
  VaultTradeType type =4;
  string time =5;
  double amount =6;
  double meca=7;
  double share=8;
  string txHash=9;
  string updateAt=10;
}

message VaultRecentResponse {
  bool success = 1;
}

enum VaultTradeType {
  DEPOSIT=0;
  WITHDRAW=1;
}

message GetAllFromVaultRequest {
  GetAllFromVault data = 1;
}

message GetAllFromVault{
  int64 chainId=1;
  string address=2;
  int64 decimals=3;
  string exchange=4;
  bool key=5;
  string locked=6;
  string name=7;
  string need=8;
  string rate=9;
  string symbol=10;
  string weight=11;
}

message ExchangeRateRequest {
  ExchangeRate data = 1;
}

message ExchangeRate{
   int64 chainId=1;
   repeated AddressUsdPriceSet userPrices=2;
}

message AddressUsdPriceSet{
  string address = 1;
  double userPrice = 2;
}